{"ast":null,"code":"var _jsxFileName = \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\src\\\\components\\\\auth\\\\AllUsers.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport UserItem from './UserItem';\nimport { getUsers } from '../../actions/auth';\n\nconst AllUsers = ({\n  getUsers,\n  auth: {\n    allusers,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n  console.log(allusers);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"All Users\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \" All Users records\"), React.createElement(\"div\", {\n    className: \"patients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, allusers && allusers.map(pat => React.createElement(UserItem, {\n    key: pat._id,\n    user: pat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nAllUsers.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getUsers\n})(AllUsers);","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\Github-trials\\HospitalMgmt\\client\\src\\components\\auth\\AllUsers.js"],"names":["React","useEffect","PropTypes","connect","Spinner","UserItem","getUsers","AllUsers","auth","allusers","loading","console","log","map","pat","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAlB,CAAD,KAA+C;AAC5DT,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,SAAOC,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACV,0CACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,uBAFJ,EAKI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,IAAIA,QAAQ,CAACI,GAAT,CAAaC,GAAG,IACzB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACC,GAAnB;AAAwB,IAAA,IAAI,EAAED,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,CADjB,CALJ,CADJ;AAaH,CAlBD;;AAoBAP,QAAQ,CAACS,SAAT,GAAqB;AACjBV,EAAAA,QAAQ,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADR;AAEjBV,EAAAA,IAAI,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFN,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADkB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,QAAvC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport UserItem from './UserItem';\r\nimport { getUsers } from '../../actions/auth';\r\n\r\nconst AllUsers = ({ getUsers, auth: { allusers, loading } }) => {\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [getUsers]);\r\n    console.log(allusers);\r\n    return loading ? <Spinner /> : (\r\n        <>\r\n            <h1 className='large text-primary'>All Users</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user' /> All Users records\r\n            </p>\r\n            <div className='patients'>\r\n                {allusers && allusers.map(pat => (\r\n                    <UserItem key={pat._id} user={pat} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nAllUsers.propTypes = {\r\n    getUsers: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers })(AllUsers);\r\n"]},"metadata":{},"sourceType":"module"}