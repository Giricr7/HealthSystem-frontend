{"ast":null,"code":"var _jsxFileName = \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\src\\\\components\\\\patient\\\\Patient.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPatient } from \"../../actions/patient\";\nimport Moment from 'react-moment';\n\nconst Patient = ({\n  getPatient,\n  patient: {\n    patient,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPatient(match.params.id);\n  }, [getPatient]);\n  return loading || patient === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(Link, {\n    to: \"/patients/me\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Back To Patients\"), React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    value: patient.name,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Mobile\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"mobile\",\n    name: \"mobile\",\n    value: patient.mobile,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Age\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"age\",\n    name: \"age\",\n    value: patient.age,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"gender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"gender\",\n    name: \"gender\",\n    value: patient.gender,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"speciality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Speciality\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"speciality\",\n    name: \"speciality\",\n    value: patient.speciality,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"hospital\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Hospital\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"hospital\",\n    name: \"hospital\",\n    value: patient.hospital,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"doctor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Doctor\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"doctor\",\n    name: \"doctor\",\n    value: patient.doctor,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"nationality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Nationality\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"nationality\",\n    name: \"nationality\",\n    value: patient.nationality,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Appointment\"), React.createElement(\"div\", {\n    className: \"datearea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"LLL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, patient.date))));\n};\n\nPatient.propTypes = {\n  getPatient: PropTypes.func.isRequired,\n  patient: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  patient: state.patient\n});\n\nexport default connect(mapStateToProps, {\n  getPatient\n})(Patient);","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\Github-trials\\HospitalMgmt\\client\\src\\components\\patient\\Patient.js"],"names":["React","useEffect","PropTypes","Link","connect","Spinner","getPatient","Moment","Patient","patient","loading","match","params","id","name","mobile","age","gender","speciality","hospital","doctor","nationality","date","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPatient } from \"../../actions/patient\";\r\nimport Moment from 'react-moment';\r\n\r\nconst Patient = ({ getPatient, patient: { patient, loading }, match }) => {\r\n\r\n    useEffect(() => {\r\n        getPatient(match.params.id);\r\n    }, [getPatient]);\r\n\r\n    return loading || patient === null ? (\r\n        <Spinner />\r\n    ) : (\r\n\r\n            <>\r\n                <Link to='/patients/me' className='btn'>\r\n                    Back To Patients\r\n                </Link>\r\n                <div className='form'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input\r\n                        type='text'\r\n                        id='name'\r\n                        name='name'\r\n                        value={patient.name}\r\n                        readOnly\r\n                    />\r\n                    <label htmlFor='mobile'>Mobile</label>\r\n                    <input\r\n                        type='text'\r\n                        id='mobile'\r\n                        name='mobile'\r\n                        value={patient.mobile}\r\n                        readOnly\r\n                    />\r\n                    <label htmlFor='age'>Age</label>\r\n                    <input\r\n                        type='text'\r\n                        id='age'\r\n                        name='age'\r\n                        value={patient.age}\r\n                        readOnly\r\n                    />\r\n                    <label htmlFor='gender'>Gender</label>\r\n                    <input\r\n                        type='text'\r\n                        id='gender'\r\n                        name='gender'\r\n                        value={patient.gender}\r\n                        readOnly\r\n                    />\r\n                    <label htmlFor='speciality'>Speciality</label>\r\n                    <input\r\n                        type='text'\r\n                        id='speciality'\r\n                        name='speciality'\r\n                        value={patient.speciality}\r\n                        readOnly\r\n                    />\r\n                    <label htmlFor='hospital'>Hospital</label>\r\n                    <input\r\n                        type='text'\r\n                        id='hospital'\r\n                        name='hospital'\r\n                        value={patient.hospital}\r\n                        readOnly\r\n                    />\r\n                    <label htmlFor='doctor'>Doctor</label>\r\n                    <input\r\n                        type='text'\r\n                        id='doctor'\r\n                        name='doctor'\r\n                        value={patient.doctor}\r\n                        readOnly\r\n                    />\r\n                    <label htmlFor='nationality'>Nationality</label>\r\n                    <input\r\n                        type='text'\r\n                        id='nationality'\r\n                        name='nationality'\r\n                        value={patient.nationality}\r\n                        readOnly\r\n                    />\r\n                    <label htmlFor='date'>Appointment</label>\r\n                    <div className=\"datearea\">\r\n                        <Moment format='LLL'>{patient.date}</Moment>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n}\r\n\r\nPatient.propTypes = {\r\n    getPatient: PropTypes.func.isRequired,\r\n    patient: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    patient: state.patient\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPatient })(Patient);\r\n\r\n"]},"metadata":{},"sourceType":"module"}