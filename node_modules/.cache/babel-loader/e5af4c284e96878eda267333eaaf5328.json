{"ast":null,"code":"var _jsxFileName = \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\src\\\\components\\\\hospitals\\\\AllHospitals.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport HospitalItem from './HospitalItem';\nimport { getHospitals } from '../../actions/hospital';\n\nconst AllHospitals = ({\n  getHospitals,\n  hospital: {\n    allhospitals,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getHospitals();\n  }, [getHospitals]);\n  console.log(allhospitals);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"All Hospitals\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \" All Hospitals records\"), React.createElement(\"div\", {\n    className: \"patients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, allhospitals && allhospitals.map(host => React.createElement(HospitalItem, {\n    key: host._id,\n    hospital: host,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nAllHospitals.propTypes = {\n  getHospitals: PropTypes.func.isRequired,\n  hospital: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  hospital: state.hospital\n});\n\nexport default connect(mapStateToProps, {\n  getHospitals\n})(AllHospitals);","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\Github-trials\\HospitalMgmt\\client\\src\\components\\hospitals\\AllHospitals.js"],"names":["React","useEffect","PropTypes","connect","Spinner","HospitalItem","getHospitals","AllHospitals","hospital","allhospitals","loading","console","log","map","host","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAED,EAAAA,YAAF;AAAgBE,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB;AAA1B,CAAD,KAA2D;AAC5ET,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,SAAOC,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACV,0CACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,2BAFJ,EAKI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,YAAY,IAAIA,YAAY,CAACI,GAAb,CAAiBC,IAAI,IAClC,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAA6B,IAAA,QAAQ,EAAED,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CADrB,CALJ,CADJ;AAaH,CAlBD;;AAoBAP,YAAY,CAACS,SAAb,GAAyB;AACrBV,EAAAA,YAAY,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADR;AAErBV,EAAAA,QAAQ,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFN,CAAzB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,QAAQ,EAAEa,KAAK,CAACb;AADc,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,YAA3C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport HospitalItem from './HospitalItem';\r\nimport { getHospitals } from '../../actions/hospital';\r\n\r\nconst AllHospitals = ({ getHospitals, hospital: { allhospitals, loading } }) => {\r\n    useEffect(() => {\r\n        getHospitals();\r\n    }, [getHospitals]);\r\n    console.log(allhospitals);\r\n    return loading ? <Spinner /> : (\r\n        <>\r\n            <h1 className='large text-primary'>All Hospitals</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user' /> All Hospitals records\r\n            </p>\r\n            <div className='patients'>\r\n                {allhospitals && allhospitals.map(host => (\r\n                    <HospitalItem key={host._id} hospital={host} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nAllHospitals.propTypes = {\r\n    getHospitals: PropTypes.func.isRequired,\r\n    hospital: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    hospital: state.hospital\r\n});\r\n\r\nexport default connect(mapStateToProps, { getHospitals })(AllHospitals);\r\n"]},"metadata":{},"sourceType":"module"}