{"ast":null,"code":"import _defineProperty from \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_PATIENTS, GET_ALL_PATIENTS, GET_PATIENT, PATIENT_ERROR, DELETE_PATIENT, ADD_PATIENT, EDIT_PATIENT } from '../actions/types';\nconst initialState = {\n  patients: [],\n  allpatients: [],\n  patient: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_PATIENTS:\n      return _objectSpread({}, state, {\n        patients: payload,\n        loading: false\n      });\n\n    case GET_ALL_PATIENTS:\n      return _objectSpread({}, state, {\n        allpatients: payload,\n        loading: false\n      });\n\n    case GET_PATIENT:\n      return _objectSpread({}, state, {\n        patient: payload,\n        loading: false\n      });\n\n    case ADD_PATIENT:\n      return _objectSpread({}, state, {\n        patients: [payload, ...state.patients],\n        allpatients: [payload, ...state.allpatients],\n        loading: false\n      });\n\n    case EDIT_PATIENT:\n      return _objectSpread({}, state, {\n        patients: [payload, ...state.patients],\n        allpatients: [payload, ...state.allpatients],\n        loading: false\n      });\n\n    case DELETE_PATIENT:\n      return _objectSpread({}, state, {\n        patients: state.patients.filter(post => post._id !== payload),\n        allpatients: state.allpatients.filter(post => post._id !== payload),\n        loading: false\n      });\n\n    case PATIENT_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\Github-trials\\HospitalMgmt\\client\\src\\reducers\\patient.js"],"names":["GET_PATIENTS","GET_ALL_PATIENTS","GET_PATIENT","PATIENT_ERROR","DELETE_PATIENT","ADD_PATIENT","EDIT_PATIENT","initialState","patients","allpatients","patient","loading","error","state","action","type","payload","filter","post","_id"],"mappings":";;;;;;AAAA,SACIA,YADJ,EAEIC,gBAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,WANJ,EAOIC,YAPJ,QAQO,kBARP;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,OAAO,EAAE,IAJQ;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AAAA,QAC3CC,IAD2C,GACzBD,MADyB,CAC3CC,IAD2C;AAAA,QACrCC,OADqC,GACzBF,MADyB,CACrCE,OADqC;;AAGnD,UAAQD,IAAR;AACI,SAAKf,YAAL;AACI,+BACOa,KADP;AAEIL,QAAAA,QAAQ,EAAEQ,OAFd;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKV,gBAAL;AACI,+BACOY,KADP;AAEIJ,QAAAA,WAAW,EAAEO,OAFjB;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKT,WAAL;AACI,+BACOW,KADP;AAEIH,QAAAA,OAAO,EAAEM,OAFb;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKN,WAAL;AACI,+BACOQ,KADP;AAEIL,QAAAA,QAAQ,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,QAAnB,CAFd;AAGIC,QAAAA,WAAW,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,WAAnB,CAHjB;AAIIE,QAAAA,OAAO,EAAE;AAJb;;AAMJ,SAAKL,YAAL;AACI,+BACOO,KADP;AAEIL,QAAAA,QAAQ,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,QAAnB,CAFd;AAGIC,QAAAA,WAAW,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,WAAnB,CAHjB;AAIIE,QAAAA,OAAO,EAAE;AAJb;;AAMJ,SAAKP,cAAL;AACI,+BACOS,KADP;AAEIL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeS,MAAf,CAAsBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,OAA3C,CAFd;AAGIP,QAAAA,WAAW,EAAEI,KAAK,CAACJ,WAAN,CAAkBQ,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,OAA9C,CAHjB;AAIIL,QAAAA,OAAO,EAAE;AAJb;;AAMJ,SAAKR,aAAL;AACI,+BACOU,KADP;AAEID,QAAAA,KAAK,EAAEI,OAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACI,aAAOE,KAAP;AA/CR;AAkDH","sourcesContent":["import {\r\n    GET_PATIENTS,\r\n    GET_ALL_PATIENTS,\r\n    GET_PATIENT,\r\n    PATIENT_ERROR,\r\n    DELETE_PATIENT,\r\n    ADD_PATIENT,\r\n    EDIT_PATIENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    patients: [],\r\n    allpatients: [],\r\n    patient: null,\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_PATIENTS:\r\n            return {\r\n                ...state,\r\n                patients: payload,\r\n                loading: false\r\n            };\r\n        case GET_ALL_PATIENTS:\r\n            return {\r\n                ...state,\r\n                allpatients: payload,\r\n                loading: false\r\n            };\r\n        case GET_PATIENT:\r\n            return {\r\n                ...state,\r\n                patient: payload,\r\n                loading: false\r\n            };\r\n        case ADD_PATIENT:\r\n            return {\r\n                ...state,\r\n                patients: [payload, ...state.patients],\r\n                allpatients: [payload, ...state.allpatients],\r\n                loading: false\r\n            };\r\n        case EDIT_PATIENT:\r\n            return {\r\n                ...state,\r\n                patients: [payload, ...state.patients],\r\n                allpatients: [payload, ...state.allpatients],\r\n                loading: false\r\n            };\r\n        case DELETE_PATIENT:\r\n            return {\r\n                ...state,\r\n                patients: state.patients.filter(post => post._id !== payload),\r\n                allpatients: state.allpatients.filter(post => post._id !== payload),\r\n                loading: false\r\n            };\r\n        case PATIENT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}