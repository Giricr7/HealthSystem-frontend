{"ast":null,"code":"import _defineProperty from \"F:\\\\GUVI-PLACEMENTS\\\\FINAL PROJECTS-FRONT\\\\HospitalSystem\\\\HealthSystem-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_ALL_HOSPITALS, ADD_HOSPITAL, EDIT_HOSPITAL, GET_HOSPITAL, DELETE_HOSPITAL, HOSPITAL_ERROR } from '../actions/types';\nconst initialState = {\n  allhospitals: [],\n  hospital: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_ALL_HOSPITALS:\n      return _objectSpread({}, state, {\n        allhospitals: payload,\n        loading: false\n      });\n\n    case GET_HOSPITAL:\n      return _objectSpread({}, state, {\n        hospital: payload,\n        loading: false\n      });\n\n    case HOSPITAL_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case ADD_HOSPITAL:\n      return _objectSpread({}, state, {\n        allhospitals: [payload, ...state.allhospitals],\n        loading: false\n      });\n\n    case EDIT_HOSPITAL:\n      return _objectSpread({}, state, {\n        allhospitals: [payload, ...state.allhospitals],\n        loading: false\n      });\n\n    case DELETE_HOSPITAL:\n      return _objectSpread({}, state, {\n        allhospitals: state.allhospitals.filter(host => host._id !== payload),\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\FINAL PROJECTS-FRONT\\HospitalSystem\\HealthSystem-frontend\\src\\reducers\\hospital.js"],"names":["GET_ALL_HOSPITALS","ADD_HOSPITAL","EDIT_HOSPITAL","GET_HOSPITAL","DELETE_HOSPITAL","HOSPITAL_ERROR","initialState","allhospitals","hospital","loading","error","state","action","type","payload","filter","host","_id"],"mappings":";;;;;;AAAA,SAASA,iBAAT,EAA4BC,YAA5B,EAAyCC,aAAzC,EAAwDC,YAAxD,EAAsEC,eAAtE,EAAuFC,cAAvF,QAA6G,kBAA7G;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AAAA,QAC3CC,IAD2C,GACzBD,MADyB,CAC3CC,IAD2C;AAAA,QACrCC,OADqC,GACzBF,MADyB,CACrCE,OADqC;;AAEnD,UAAQD,IAAR;AACI,SAAKb,iBAAL;AACA,+BACOW,KADP;AAEIJ,QAAAA,YAAY,EAAEO,OAFlB;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKA,SAAKN,YAAL;AACA,+BACOQ,KADP;AAEIH,QAAAA,QAAQ,EAAEM,OAFd;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKA,SAAKJ,cAAL;AACA,+BACOM,KADP;AAEID,QAAAA,KAAK,EAAEI,OAFX;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKA,SAAKR,YAAL;AACI,+BACOU,KADP;AAEIJ,QAAAA,YAAY,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,YAAnB,CAFlB;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKP,aAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,YAAY,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,YAAnB,CAFlB;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKL,eAAL;AACI,+BACOO,KADP;AAEIJ,QAAAA,YAAY,EAAEI,KAAK,CAACJ,YAAN,CAAmBQ,MAAnB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaH,OAA/C,CAFlB;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACI,aAAOE,KAAP;AAtCR;AA0CH","sourcesContent":["import { GET_ALL_HOSPITALS, ADD_HOSPITAL,EDIT_HOSPITAL, GET_HOSPITAL, DELETE_HOSPITAL, HOSPITAL_ERROR } from '../actions/types';\r\n\r\nconst initialState = {\r\n    allhospitals: [],\r\n    hospital: null,\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_ALL_HOSPITALS:\r\n        return {\r\n            ...state,\r\n            allhospitals: payload,\r\n            loading: false\r\n        };\r\n        case GET_HOSPITAL:\r\n        return {\r\n            ...state,\r\n            hospital: payload,\r\n            loading: false\r\n        };\r\n        case HOSPITAL_ERROR:\r\n        return {\r\n            ...state,\r\n            error: payload,\r\n            loading: false\r\n        };\r\n        case ADD_HOSPITAL:\r\n            return {\r\n                ...state,\r\n                allhospitals: [payload, ...state.allhospitals],\r\n                loading: false\r\n            };\r\n        case EDIT_HOSPITAL:\r\n            return {\r\n                ...state,\r\n                allhospitals: [payload, ...state.allhospitals],\r\n                loading: false\r\n            };\r\n        case DELETE_HOSPITAL:\r\n            return {\r\n                ...state,\r\n                allhospitals: state.allhospitals.filter(host => host._id !== payload),\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}