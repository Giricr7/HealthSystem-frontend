{"ast":null,"code":"import _defineProperty from \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\src\\\\components\\\\hospitals\\\\HospitalForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addHospital } from \"../../actions/hospital\";\n\nconst HospitalForm = ({\n  addHospital,\n  history\n}) => {\n  const _useState = useState({\n    name: \"\",\n    area: \"\",\n    city: \"\",\n    country: \"\",\n    mobile: \"\",\n    email: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const name = formData.name,\n        area = formData.area,\n        city = formData.city,\n        country = formData.country,\n        mobile = formData.mobile,\n        email = formData.email;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addHospital(formData, history);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Add a Hospital\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \" Let's get some information about the hospital\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"* Mobile\",\n    name: \"mobile\",\n    value: mobile,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Area\",\n    name: \"area\",\n    value: area,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* City\",\n    name: \"city\",\n    value: city,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Country\",\n    name: \"country\",\n    value: country,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/hospitals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nHospitalForm.propTypes = {\n  addHospital: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addHospital\n})(withRouter(HospitalForm));","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\Github-trials\\HospitalMgmt\\client\\src\\components\\hospitals\\HospitalForm.js"],"names":["React","useState","Link","withRouter","PropTypes","connect","addHospital","HospitalForm","history","name","area","city","country","mobile","email","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addHospital } from \"../../actions/hospital\";\r\n\r\nconst HospitalForm = ({ addHospital, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        area: \"\",\r\n        city: \"\",\r\n        country: \"\",\r\n        mobile: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    const {\r\n        name,\r\n        area,\r\n        city,\r\n        country,\r\n        mobile,\r\n        email\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        addHospital(formData, history);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className='large text-primary'>Add a Hospital</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user' /> Let's get some information about the hospital\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className='form' onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Name'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='number'\r\n                        placeholder='* Mobile'\r\n                        name='mobile'\r\n                        value={mobile}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Area'\r\n                        name='area'\r\n                        value={area}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* City'\r\n                        name='city'\r\n                        value={city}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Country'\r\n                        name='country'\r\n                        value={country}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <Link className='btn btn-light my-1' to='/hospitals'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nHospitalForm.propTypes = {\r\n    addHospital: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addHospital})(withRouter(HospitalForm));\r\n"]},"metadata":{},"sourceType":"module"}