{"ast":null,"code":"var _jsxFileName = \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\src\\\\components\\\\patients\\\\AllPatients.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PatientItem from './PatientItem';\nimport { getPatients } from '../../actions/patient';\n\nconst AllPatients = ({\n  getPatients,\n  patient: {\n    allpatients,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPatients();\n  }, [getPatients]);\n  console.log(allpatients);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"All Patients\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \" All Patients records\"), React.createElement(\"div\", {\n    className: \"patients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, allpatients && allpatients.map(pat => React.createElement(PatientItem, {\n    key: pat._id,\n    patient: pat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nAllPatients.propTypes = {\n  getPatients: PropTypes.func.isRequired,\n  patient: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  patient: state.patient\n});\n\nexport default connect(mapStateToProps, {\n  getPatients\n})(AllPatients);","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\Github-trials\\HospitalMgmt\\client\\src\\components\\patients\\AllPatients.js"],"names":["React","useEffect","PropTypes","connect","Spinner","PatientItem","getPatients","AllPatients","patient","allpatients","loading","console","log","map","pat","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAED,EAAAA,WAAF;AAAeE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf;AAAxB,CAAD,KAAwD;AACxET,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,SAAOC,OAAO,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACV,0CACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,0BAFJ,EAKI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,WAAW,IAAIA,WAAW,CAACI,GAAZ,CAAgBC,GAAG,IAC/B,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,GAAG,CAACC,GAAtB;AAA2B,IAAA,OAAO,EAAED,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,CADpB,CALJ,CADJ;AAaH,CAlBD;;AAoBAP,WAAW,CAACS,SAAZ,GAAwB;AACpBV,EAAAA,WAAW,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADR;AAEpBV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFN,CAAxB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,OAAO,EAAEa,KAAK,CAACb;AADe,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,WAA1C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PatientItem from './PatientItem';\r\nimport { getPatients } from '../../actions/patient';\r\n\r\nconst AllPatients = ({ getPatients, patient: { allpatients, loading } }) => {\r\n    useEffect(() => {\r\n        getPatients();\r\n    }, [getPatients]);\r\n    console.log(allpatients);\r\n    return loading ? <Spinner /> : (\r\n        <>\r\n            <h1 className='large text-primary'>All Patients</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user' /> All Patients records\r\n            </p>\r\n            <div className='patients'>\r\n                {allpatients && allpatients.map(pat => (\r\n                    <PatientItem key={pat._id} patient={pat} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nAllPatients.propTypes = {\r\n    getPatients: PropTypes.func.isRequired,\r\n    patient: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    patient: state.patient\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPatients })(AllPatients);\r\n"]},"metadata":{},"sourceType":"module"}