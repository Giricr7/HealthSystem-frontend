{"ast":null,"code":"import _defineProperty from \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\src\\\\components\\\\auth\\\\Forgot.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { forgot } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Forgot = ({\n  setAlert,\n  forgot,\n  isAuthenticated\n}) => {\n  const _useState = useState({\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      forgot(email, password);\n    }\n  };\n\n  if (isAuthenticated) {\n    return React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Forgot Password\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \" Reset your password\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};\n\nForgot.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  forgot: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  forgot\n})(Forgot);","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\Github-trials\\HospitalMgmt\\client\\src\\components\\auth\\Forgot.js"],"names":["React","useState","Redirect","connect","setAlert","forgot","PropTypes","Forgot","isAuthenticated","email","password","password2","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { forgot } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Forgot = ({ setAlert, forgot, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { email, password, password2 } = formData;\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger');\r\n        } else {\r\n            forgot(email, password);\r\n        }\r\n      };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/home' />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"large text-primary\">Forgot Password</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Reset your password</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type='email'\r\n                        placeholder='Email Address'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength=\"6\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"password2\"\r\n                        value={password2}\r\n                        onChange={e => onChange(e)}\r\n                        minLength=\"6\"\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Reset\" />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nForgot.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    forgot: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n\r\n  const mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setAlert, forgot }\r\n  )(Forgot);\r\n"]},"metadata":{},"sourceType":"module"}