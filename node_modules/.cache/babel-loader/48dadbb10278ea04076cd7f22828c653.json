{"ast":null,"code":"import _defineProperty from \"F:\\\\GUVI-PLACEMENTS\\\\FINAL PROJECTS-FRONT\\\\HospitalSystem\\\\HealthSystem-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\GUVI-PLACEMENTS\\\\FINAL PROJECTS-FRONT\\\\HospitalSystem\\\\HealthSystem-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\GUVI-PLACEMENTS\\\\FINAL PROJECTS-FRONT\\\\HospitalSystem\\\\HealthSystem-frontend\\\\src\\\\components\\\\auth\\\\Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n    avatar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2,\n        avatar = formData.avatar;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password,\n        avatar\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \" Create Your Account\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    required: true,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    required: true,\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"avatar\",\n    value: avatar,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Are you a doctor?\"), React.createElement(\"option\", {\n    value: \"Doctor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Yes\"), React.createElement(\"option\", {\n    value: \"NotDoctor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"No\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    required: true,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Already have an account? \", React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Sign In\")));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\FINAL PROJECTS-FRONT\\HospitalSystem\\HealthSystem-frontend\\src\\components\\auth\\Register.js"],"names":["React","useState","Link","Redirect","connect","setAlert","register","PropTypes","Register","isAuthenticated","name","email","password","password2","avatar","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n        avatar: ''\r\n    });\r\n\r\n    const { name, email, password, password2, avatar } = formData;\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger');\r\n        } else {\r\n            register({ name, email, password, avatar });\r\n        }\r\n      };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/home' />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        name='name'\r\n                        value={name}\r\n                        required\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type='email'\r\n                        required\r\n                        placeholder='Email Address'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <select name='avatar' value={avatar} onChange={e => onChange(e)}>\r\n                        <option value='0'>Are you a doctor?</option>\r\n                        <option value='Doctor'>Yes</option>\r\n                        <option value='NotDoctor'>No</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        required\r\n                        onChange={e => onChange(e)}\r\n                        minLength=\"6\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"password2\"\r\n                        value={password2}\r\n                        required\r\n                        onChange={e => onChange(e)}\r\n                        minLength=\"6\"\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Already have an account? <Link to=\"/login\">Sign In</Link>\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n\r\n  const mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  });\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setAlert, register }\r\n  )(Register);\r\n"]},"metadata":{},"sourceType":"module"}