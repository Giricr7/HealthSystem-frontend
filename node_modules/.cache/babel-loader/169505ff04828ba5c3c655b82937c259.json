{"ast":null,"code":"var _jsxFileName = \"F:\\\\GUVI-PLACEMENTS\\\\Github-trials\\\\HospitalMgmt\\\\client\\\\src\\\\components\\\\auth\\\\EditUserForm.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { editUser, getUser } from \"../../actions/auth\";\nimport isEmpty from '../patients/is-empty';\n\nclass EditUserForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      role: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.id);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.calleduser) {\n      const curruser = nextProps.auth.calleduser; // If curruser field doesnt exist, make empty string\n\n      curruser.name = !isEmpty(curruser.name) ? curruser.name : '';\n      curruser.email = !isEmpty(curruser.email) ? curruser.email : '';\n      curruser.role = !isEmpty(curruser.role) ? curruser.role : ''; // Set component fields state\n\n      this.setState({\n        name: curruser.name,\n        email: curruser.email,\n        role: curruser.role\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const userData = {\n      name: this.state.name,\n      email: this.state.email,\n      role: this.state.role\n    };\n    this.props.editUser(this.props.match.params.id, userData, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      className: \"large text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Edit an User\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), \" Let's edit some information about the user\"), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"* = required field\"), React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"* Name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"* Email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"role\",\n      value: this.state.role,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Select Role\"), React.createElement(\"option\", {\n      value: \"Admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Admin\"), React.createElement(\"option\", {\n      value: \"Normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Normal\"))), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"btn btn-light my-1\",\n      to: \"/patients/me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Go Back\")));\n  }\n\n}\n\nEditUserForm.propTypes = {\n  editUser: PropTypes.func.isRequired,\n  getUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  editUser,\n  getUser\n})(withRouter(EditUserForm));","map":{"version":3,"sources":["F:\\GUVI-PLACEMENTS\\Github-trials\\HospitalMgmt\\client\\src\\components\\auth\\EditUserForm.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","editUser","getUser","isEmpty","EditUserForm","constructor","props","state","name","email","role","onChange","bind","onSubmit","componentDidMount","match","params","id","UNSAFE_componentWillReceiveProps","nextProps","auth","calleduser","curruser","setState","e","preventDefault","userData","history","target","value","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { editUser, getUser } from \"../../actions/auth\";\r\nimport isEmpty from '../patients/is-empty';\r\n\r\nclass EditUserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            role: \"\"\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUser(this.props.match.params.id);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.auth.calleduser) {\r\n            const curruser = nextProps.auth.calleduser;\r\n\r\n          // If curruser field doesnt exist, make empty string\r\n            curruser.name = !isEmpty(curruser.name) ? curruser.name : '';\r\n            curruser.email = !isEmpty(curruser.email) ? curruser.email : '';\r\n            curruser.role = !isEmpty(curruser.role) ? curruser.role : '';\r\n\r\n            // Set component fields state\r\n            this.setState({\r\n                name: curruser.name,\r\n                email: curruser.email,\r\n                role: curruser.role,\r\n            });\r\n        }\r\n      }\r\n\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n          name: this.state.name,\r\n          email: this.state.email,\r\n          role: this.state.role,\r\n        };\r\n\r\n        this.props.editUser(this.props.match.params.id, userData, this.props.history);\r\n\r\n      }\r\n\r\n      onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n      }\r\n\r\n    render() {\r\n    return (\r\n        <>\r\n            <h1 className='large text-primary'>Edit an User</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user' /> Let's edit some information about the user\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className='form' onSubmit={this.onSubmit}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Name'\r\n                        name='name'\r\n                        value={this.state.name}\r\n                        onChange={this.onChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        placeholder='* Email'\r\n                        name='email'\r\n                        value={this.state.email}\r\n                        onChange={this.onChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <select name='role' value={this.state.role} onChange={this.onChange}>\r\n                        <option value='0'>Select Role</option>\r\n                        <option value='Admin'>Admin</option>\r\n                        \r\n                        <option value='Normal'>Normal</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <Link className='btn btn-light my-1' to='/patients/me'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n }\r\n}\r\n\r\nEditUserForm.propTypes = {\r\n    editUser: PropTypes.func.isRequired,\r\n    getUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { editUser, getUser })(withRouter(EditUserForm));\r\n"]},"metadata":{},"sourceType":"module"}